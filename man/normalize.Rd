% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/normalize-methods.R
\docType{methods}
\name{normalize}
\alias{normalize}
\alias{normalize,SingleCellExperiment-method}
\alias{normalize,Seurat-method}
\alias{normalize,cell_data_set-method}
\title{Normalize expression using pre-computed size factors}
\usage{
normalize(object, ...)

\S4method{normalize}{SingleCellExperiment}(object, verbose = FALSE)

\S4method{normalize}{Seurat}(object, verbose = FALSE)

\S4method{normalize}{cell_data_set}(object, verbose = FALSE)
}
\arguments{
\item{object}{Object.}

\item{verbose}{\code{logical(1)}.
Run the function with verbose output.}

\item{...}{Additional arguments.}
}
\value{
Modified object.
}
\description{
This function calculates size factor normalized and log normalized counts
from the raw count matrix defined in \code{\link[=counts]{counts()}}. These matrices are stored in
\code{\link[=normcounts]{normcounts()}} and \code{\link[=logcounts]{logcounts()}} slots in \code{\link[=assays]{assays()}}, respectively.
}
\details{
If no library size factors are defined in \code{\link[=sizeFactors]{sizeFactors()}}, these values will
be computed internally automatically using \code{\link[=estimateSizeFactors]{estimateSizeFactors()}} with the
recommended default settings.

For complex normalizations involving custom size factors or spike-ins (i.e.
when \code{\link[=spikeNames]{spikeNames()}}) is defined, call \code{\link[scater:normalizeSCE]{scater::normalizeSCE()}} directly
instead.
}
\note{
Updated 2019-10-26.
}
\section{Normalized counts}{


Normalized counts are computed by dividing the counts for each cell by the
size factor for that cell. This aims to remove cell-specific scaling biases,
due to differences in sequencing coverage or capture efficiency.
}

\section{Log normalized counts}{


Log-normalized values are calculated by adding a pseudocount offset of 1 to
the normalized count and performing a \code{\link[base:log2]{log2()}} transformation.
}

\section{Centering at unity}{


When centering is applied to the size factors (recommended by default), all
sets of size factors will be adjusted to have the same mean prior to
calculation of normalized expression values. This ensures that abundances are
roughly comparable between features normalized with different sets of size
factors. By default, the center mean is unity, which means that the computed
expression values can be interpreted as being on the same scale as the
log2-counts. It also means that the added offset (i.e. \code{1}) added to the
normalized counts during the log transformation step can be interpreted as a
pseudo-count (i.e., on the same scale as the counts).
}

\examples{
data(
    Seurat,
    SingleCellExperiment,
    cell_data_set,
    package = "acidtest"
)

## SingleCellExperiment ====
object <- SingleCellExperiment
object <- normalize(object)

## Seurat ====
object <- Seurat
object <- normalize(object)

## cell_data_set ====
## > object <- cell_data_set
## > object <- normalize(object)
}
\seealso{
\itemize{
\item \code{\link[=estimateSizeFactors]{estimateSizeFactors()}}.
\item \code{\link[SingleCellExperiment:normcounts]{SingleCellExperiment::normcounts()}}.
\item \code{\link[SingleCellExperiment:logcounts]{SingleCellExperiment::logcounts()}}.
\item \code{\link[scater:normalizeSCE]{scater::normalizeSCE()}}.
\item \code{\link[Seurat:NormalizeData]{Seurat::NormalizeData()}}.
\item \code{\link[monocle3:preprocess_cds]{monocle3::preprocess_cds()}}.
\item \code{\link[monocle3:normalized_counts]{monocle3::normalized_counts()}}.
}
}
